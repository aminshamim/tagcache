[package]
name = "tagcache"
version = "1.0.3"
edition = "2021"
authors = ["Md. Aminul Islam Sarker <aminshamim@gmail.com>"]
description = "Lightweight, sharded, tag-aware in-memory cache server"
repository = "https://github.com/aminshamim/tagcache"
license = "MIT OR Apache-2.0"
keywords = ["cache", "server", "memory", "tags", "performance"]
categories = ["caching", "database", "web-programming"]
readme = "README.md"

# Define multiple binaries
[[bin]]
name = "tagcache"
path = "src/main.rs"

[[bin]]
name = "bench_tcp"
path = "src/bin/bench_tcp.rs"

[dependencies]
axum = { version = "0.7", features = ["macros", "json"] }
tokio = { version = "1.37", features = ["rt-multi-thread", "macros", "time", "signal", "io-util", "net"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
dashmap = "6.0"
parking_lot = "0.12"
smallvec = "1.13"
ahash = "0.8"
thiserror = "1.0"
bytes = "1.6"
uuid = { version = "1.7", features = ["v4"] }
tower-http = { version = "0.5", features = ["cors", "trace", "fs"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
anyhow = "1.0"
rand = "0.8"
chrono = { version = "0.4", features=["clock", "serde"] }
base64 = "0.22"
reqwest = { version = "0.12", features = ["json"] }
clap = { version = "4.0", features = ["derive"] }
tower = { version = "0.4", features = ["util"] }
rust-embed = { version = "8.0", features = ["debug-embed"] }
mime_guess = "2.0"

[dev-dependencies]
sysinfo = "0.30"
hdrhistogram = "7"
once_cell = "1.19"

# Debian package metadata
[package.metadata.deb]
maintainer = "Md. Aminul Islam Sarker <aminshamim@gmail.com>"
copyright = "2025, Md. Aminul Islam Sarker <aminshamim@gmail.com>"
license-file = ["LICENSE", "4"]
extended-description = """\
TagCache is a lightweight, sharded, tag-aware in-memory cache server \
written in Rust. It provides both HTTP API and TCP protocol interfaces \
with tag-based invalidation and optional TTL support.

Features:
- High-performance concurrent access with sharding
- Tag-based cache invalidation
- HTTP REST API and TCP protocol
- Optional TTL (time-to-live) support
- Built-in statistics and monitoring
- Authentication and authorization
- Cross-platform support"""
depends = "$auto"
section = "database"
priority = "optional"
assets = [
    ["target/release/tagcache", "usr/bin/", "755"],
    ["target/release/bench_tcp", "usr/bin/", "755"],
    ["README.md", "usr/share/doc/tagcache/README", "644"],
    ["packaging/systemd/tagcache.service", "lib/systemd/system/", "644"],
]
maintainer-scripts = "packaging/debian/"
systemd-units = { enable = false }

# RPM package metadata
[package.metadata.generate-rpm]
license = "MIT OR Apache-2.0"
summary = "Lightweight, sharded, tag-aware in-memory cache server"
assets = [
    { source = "target/release/tagcache", dest = "/usr/bin/tagcache", mode = "755" },
    { source = "target/release/bench_tcp", dest = "/usr/bin/bench_tcp", mode = "755" },
    { source = "README.md", dest = "/usr/share/doc/tagcache/README.md", mode = "644" },
    { source = "packaging/systemd/tagcache.service", dest = "/usr/lib/systemd/system/tagcache.service", mode = "644" },
]

[package.metadata.generate-rpm.requires]
glibc = "*"
